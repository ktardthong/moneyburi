{"version":3,"sources":["ng_app.js","ng_factory.js","BillController.js","CreditCardController.js","GoalBuyingController.js","GoalCarController.js","GoalController.js","GoalTravelController.js","SpendableChartController.js","SpendingCategoriesChartController.js","TransactionsController.js","userController.js"],"names":[],"mappingsllnhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACthhTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["var app = angular.module('App',['ngAnimate','ngRoute','ng-mfb','ngMaterial','chart.js','ngSanitize','gm',\n                                'ngMap','ngChartjsDirective','ngScrollbars']);\n\n//http://www.bennadel.com/blog/2935-enable-animations-explicitly-for-a-performance-boost-in-angularjs.htm?utm_content=buffer6cd7e&utm_medium=social&utm_source=facebook.com&utm_campaign=buffer\napp.config(\nfunction configureAnimate( $animateProvider ) {\n    $animateProvider.classNameFilter( /\\banimated\\b/ );\n});\n\napp.config(function($routeProvider){\n    $routeProvider\n        .when('/Bills',{\n            templateUrl: '/bill/billCard'\n        })\n        .when('/profile',{\n            templateUrl: '/spendableCard'\n        })\n        .when('/CreditCard',{\n            templateUrl: 'card/mainCard'\n        })\n        .when('/setup',{\n            templateUrl: '/init_setup'\n        })\n        .when('/Transactions',{\n            templateUrl: '/transCard'\n        })\n        .otherwise({\n            template: '<div> Nothing here </div>'\n        })\n})\n\n\n//Angular Theming\napp.config(function($mdThemingProvider) {\n    $mdThemingProvider.definePalette('amazingPaletteName', {\n        '50': 'ffebee',\n        '100': 'ffcdd2',\n        '200': 'ef9a9a',\n        '300': 'e57373',\n        '400': 'ef5350',\n        '500': '87D2DA',    //highlight, underline etc\n        '600': 'e53935',\n        '700': 'd32f2f',\n        '800': 'c62828',\n        '900': 'b71c1c',\n        'A100': 'ff8a80',\n        'A200': 'ff5252',\n        'A400': 'ff1744',\n        'A700': 'd50000',\n        'contrastDefaultColor': 'light',    // whether, by default, text (contrast)\n                                            // on this palette should be dark or light\n        'contrastDarkColors': ['50', '100', //hues which contrast should be 'dark' by default\n            '200', '300', '400', 'A100'],\n        'contrastLightColors': undefined    // could also specify this if default was 'dark'\n    });\n    $mdThemingProvider.theme('default')\n        .primaryPalette('amazingPaletteName')\n});\n\n\n\napp.controller('profileController', function($scope, $http,factory_userData,factory_userGoals,\n                                            factory_userBills,factory_utils,\n                                            factory_userCards,\n                                            factory_mfb,\n                                            factory_userSpending,\n                                            factory_transaction,\n                                            $rootScope,$route, $routeParams, $location) {\n\n    $scope.$route = $route;\n    $scope.$location = $location;\n    $scope.$routeParams = $routeParams;\n\n    $scope.loc = function(href) {\n        $location.path(href)\n    }\n\n    $http.defaults.withCredentials = true;\n    $scope.date = new Date();\n\n\n    factory_userData.userDataFactory().success(function(data){\n\n        $scope.userData=data;\n\n        $rootScope.rs_userData      = data;\n        $rootScope.rs_mthlyIncome   =   $scope.userData.mth_income;\n        $rootScope.rs_mthlySaving   =   $scope.userData.mth_saving;\n    });\n\n\n    factory_userData.userJobs().success(function(data){\n        $scope.userJobs=data;\n    });\n\n    factory_utils.getCurrency().success(function(data){\n        $scope.currencies=data;\n    });\n\n\n    factory_userGoals.userGoalsFactory().success(function(data){\n        $scope.userGoals=data;\n    });\n\n    factory_userGoals.carBrandsList().success(function(data){\n        $scope.carBrandsList = data;\n    });\n\n    factory_userBills.getBlls().success(function(data){\n        $rootScope.rs_userBills = data;\n    });\n\n    /*factory_userBills.upComing().success(function(data){\n        $scope.upComing = data;\n    });*/\n\n    factory_userBills.sumBills().success(function(data) {\n        $rootScope.rs_sumBills = data;\n    });\n\n    factory_userBills.billCate().success(function(response) {\n       $scope.billCate = response;\n    });\n\n    factory_userCards.getCards().success(function(data){\n        $rootScope.userCards = data;\n    });\n\n    factory_userCards.ccIssuer().success(function(data){\n        $scope.ccIssuer = data;\n    });\n    factory_userCards.ccTypes().success(function(data){\n        $scope.ccTypes = data;\n    });\n\n    factory_userCards.sumMonthlyTransaction().success(function(data){\n        $scope.sumAmountCC = data;\n    });\n\n\n    factory_transaction.userMonthlySpending().success(function(data){\n        $rootScope.monthlyRemain = data[0][\"mth_spendable\"] - data[0][\"monthSpending\"]; //total - spent\n        $rootScope.data_monthlhlySpent = data[0][\"monthSpending\"];\n        var json = {\n                    \"data\": [   data[0][\"monthSpending\"], data[0][\"mth_spendable\"] ],\n                    \"labels\":   [\"Spent\", \"Spendable\"],\n                    \"colours\":  [\"#8D8D8D\",\"#87D2DA\"],\n                    \"option\": {\n                                responsive: true,\n                                maintainAspectRatio: true,\n\n                                //Boolean - Whether we should show a stroke on each segment\n                                segmentShowStroke : true,\n\n                                //String - The colour of each segment stroke\n                                segmentStrokeColor : \"#fff\",\n\n                                //Number - The width of each segment stroke\n                                segmentStrokeWidth : 1,\n\n                                //Number - The percentage of the chart that we cut out of the middle\n                                percentageInnerCutout : 85, // This is 0 for Pie charts\n\n                                //Number - Amount of animation steps\n                                animationSteps : 10,\n\n                                //Boolean - Whether we animate the rotation of the Doughnut\n                                animateRotate : true\n                            }\n                    };\n        $rootScope.rs_userMonthlySpending = json;\n    });\n\n\n\n\n    $scope.float_buttons = factory_mfb.mfb();\n\n    factory_userSpending.dailySpending($scope);\n\n\n    $scope.nav = function(path) {\n\n        $scope.template.url = path;\n    };\n\n    $scope.templates =\n        [\n            { name: 'Spendable'         , url: '/spendableCard'},\n            { name: 'Goals'             , url: '/goal/card_goal'},\n            { name: 'Transactions'      , url: '/Transactions'},\n            { name: 'Bills'             , url: '/Bills'},\n            { name: 'Credit cards'      , url: '/CreditCard'},\n        ];\n\n\n\n    $scope.template = $scope.templates[0];\n\n    $scope.addTransaction = function() {\n        $scope.showAddTransaction = true;\n    };\n\n    $scope.backAddTransaction = function() {\n        $scope.showAddTransaction = false;\n    };\n\n    $scope.initUpdate = function()\n    {\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/InitUpdate\",\n            data:  {\n                    job: $scope.userJobType,\n                    flg:   $('#jobtype').val()\n            }\n        })\n        .done(function( msg ) {\n            window.location.href = '/';\n        });\n    }\n\n    factory_transaction.pmtTypes().success(function(data) {\n        $rootScope.pmtTypes = data;\n    });\n});\n\n\n\napp.controller('thisController', function($scope, $http, $filter,factory_userData) {\n    $scope.days     = [1,\t2,\t3,\t4,\t5,\t6,\t7,\t8,\t9,\t10,\t11,\t12,\t13,\t14,\t15,\t16,\t17,\t18,\t19,\t20,\t21,\t22,\t23,\t24,\t25,\t26,\t27,\t28,\t29,\t30,\t31];\n    $scope.months   = [{id: 1, month: \"Jan\"}, {id: 2,month: 'Feb'},{id: 3,month: 'Mar'},{id: 4,month: 'Apr'},{id: 5,month: 'May'}, {id: 6,month: 'Jun'},{id: 7,month: 'Jul'},{id: 8,month: 'Aug'},\n        {id: 9,month: 'Sept'},{id: 10,month: 'Oct'},{id: 11,month: 'Nov'},{id: 12,month: 'Dec'}];\n\n\n    factory_userData.userJobs().success(function(data){\n        $scope.items = data;\n    })\n\n\n    $scope.userAddData = function() {\n\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/userName\",\n            data:  {    fname: $('#init_firstname').val() ,\n                lname: $('#init_lastname').val(),\n                job:   $('#jobtype').val()\n            }\n        })\n            .done(function( msg ) {\n                window.location.href = '/init_setup_2';\n            });\n    };\n\n\n    $scope.statusAddData = function() {\n\n        var bdate = $('#birthYear').val()+\"-\"+$('#birthMonth').val()+\"-\"+$('#birthDay').val();\n\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/userStatus\",\n            data:  {    bdate:  bdate,\n                gender: gender_flg,\n                status: user_status\n            }\n        })\n            .done(function( msg ) {\n                window.location.href = '/init_setup_3';\n            });\n    };\n\n\n    var cardData = [];\n    var mthly_income ='';\n\n    $scope.cardAddData = function() {\n\n        if(cardData.length > 0)\n        {\n            cardData = JSON.parse(cardData);\n        }\n\n        $.ajax({\n            method: \"POST\",\n            url:    \"/ajax/userFinance\",\n            data:   {\n                mthlyInc:   $('#mthlyIncome').val(),\n                currency:   $('#currencySelect').val(),\n                cards:      cardData\n            }\n        })\n            .done(function( msg ) {\n                window.location.href = '/init_setup_4';\n            });\n    };\n\n\n    $scope.spendableAddData = function() {\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/userPlan\",\n            data:  {    mth_saving:     $('#mthlySaving').html(),\n                mth_spending:   $('#mthlySpendable').html(),\n                dd_spending:    $('#dailySpendable').html(),\n                dd_saving:      $('#dailySaving').html()\n            }\n        })\n            .done(function( msg ) {\n                window.location.href = '/init_complete';\n            });\n    };\n\n\n    $http.get(\"/getAllTransactions\")\n        .success(function(response) {\n            $scope.transactions = response;\n            $scope.todaysTrans =  $filter('filter')($scope.transactions, {trans_date: $filter('date')(new Date(), 'yyyy-MM-dd')}, true);\n\n            $scope.spentToday = 0;\n            angular.forEach($scope.todaysTrans, function(value) {\n                $scope.spentToday += value.amount;\n            });\n\n            $scope.remainingToday = $scope.userData.d_spendable - $scope.spentToday;\n\n        }\n    );\n\n});\n\n\napp.directive('routeLoadingIndicator', function($rootScope) {\n    return {\n        restrict: 'E',\n        template: $rootScope.moneyquote,\n        replace: true,\n        link: function(scope, elem, attrs) {\n            scope.isRouteLoading = false;\n            scope.isLoaded = false;\n\n            $rootScope.$on('$routeChangeStart', function() {\n                scope.isRouteLoading = true;\n            });\n            $rootScope.$on('$routeChangeSuccess', function() {\n                scope.isRouteLoading = false;\n                scope.isLoaded = true\n            });\n        }\n\n  };\n});\n\n","/*\n* Angular Factory -\n* */\n\n\n\napp.factory('factory_userData', function($http) {\n    return {\n        userDataFactory: function(){\n            return $http.get(\"/ajax/userData\");\n        },\n        userJobs:function(){\n            return $http.get(\"/ajax/getUserJobs\");\n        }\n    }\n})\n\napp.factory('factory_userGoals', function($http) {\n    return {\n        userGoalsFactory: function () {\n            return $http.get(\"/ajax/userGoals\");\n        },\n        carBrandsList: function () {\n            return $http.get(\"/goal/getCarBrands\");\n        }\n    };\n});\n\napp.factory('factory_userBills', function($http) {\n\n    return {\n        getBlls: function () {\n            return $http.get(\"/bill/getBills\");\n        },\n        upComing: function (){\n            return $http.get(\"/bill/upComing\");\n        },\n        sumBills: function(){\n            return $http.get(\"/bill/sumBillAmount\");\n        },\n        billCate: function(){\n          return $http.get(\"/ajax/billCate\");\n        }\n    }\n});\n\napp.factory('factory_utils',function($http){\n    return {\n        getCurrency: function () {\n            return $http.get(\"/ajax/currency\");\n        },\n        upComing: function (){\n            return $http.get(\"/bill/upComing\");\n        }\n    }\n});\n\napp.factory('factory_transaction',function($http){\n    return {\n        userMonthlySpending:function(){\n            return $http.get(\"/userMonthlySpending\");\n        },\n\n        pmtTypes:function(){\n            return $http.get(\"/ajax/pmtTypes\");\n        }\n    }\n})\n\n\napp.factory('factory_userCards', function($http) {\n    return {\n        getCards: function (){\n            return $http.get(\"/card/getCards\");\n        },\n        ccIssuer: function(){\n            return $http.get(\"/ajax/ccIssuer\");\n        },\n        ccTypes: function(){\n            return $http.get(\"/ajax/ccTypes\");\n        },\n        sumMonthlyTransaction: function(){\n            return $http.get(\"/card/sumMonthTransaction\");\n        }\n    }\n});\n\napp.factory('factory_mfb',function($http){\n    return {\n            mfb: function (){\n\n                return [{\n                    label: 'Home',\n                    icon: 'ion-home',\n                    url: '/'\n                }, {\n                    label: 'Credit Card',\n                    icon: 'ion-card',\n                    url: '/CreditCard'\n                }, {\n                    label: 'Bills',\n                    icon: 'ion-ios-list-outline',\n                    url: '/Bills'\n                }, {\n                    label: 'Transactions',\n                    icon: 'ion-calculator',\n                    url: '/Transactions'\n                }];\n            }\n        }\n});\n\napp.factory('factory_userSpending',function($http){\n\n    return   {\n                spendableFlg: false\n            },\n            {\n                dailySpending: function($scope){\n                return  $http.get(\"/todaySpending\")\n                        .success(function(response) {\n                        var windowTodaySpending = typeof response[0][\"todaySpending\"] != 'undefined' ? response[0][\"todaySpending\"] : 0;\n                        $scope.d_spendable     = response[0][\"d_spendable\"];\n                        $scope.todaySpending   = windowTodaySpending;\n                        $scope.todaySpendable  = $scope.d_spendable - $scope.todaySpending;\n\n                        if($scope.todaySpendable<0){ $scope.todaySpendable =0}\n                        //Chart\n                        var json = {\n                            \"data\": [$scope.todaySpending, $scope.todaySpendable],\n                            \"labels\":   [\"Spent\", \"Spendable\"],\n                            \"colours\":  [\"#8D8D8D\",\"#87D2DA\"],\n                            \"option\": {\n                                responsive: true,\n                                maintainAspectRatio: true,\n\n                                //Boolean - Whether we should show a stroke on each segment\n                                segmentShowStroke : true,\n\n                                //String - The colour of each segment stroke\n                                segmentStrokeColor : \"#fff\",\n\n                                //Number - The width of each segment stroke\n                                segmentStrokeWidth : 2,\n\n                                //Number - The percentage of the chart that we cut out of the middle\n                                percentageInnerCutout : 80, // This is 0 for Pie charts\n\n                                //Number - Amount of animation steps\n                                animationSteps : 80,\n\n                                //Boolean - Whether we animate the rotation of the Doughnut\n                                animateRotate : true\n                            }\n\n\n\n                        };\n                        $scope.spendableDough = json;\n                    });\n            }\n   }\n});","app.controller('billController', function($scope, $http,$rootScope,factory_userBills,$route, $routeParams, $location) {\n\n\n    $scope.days     = [1,\t2,\t3,\t4,\t5,\t6,\t7,\t8,\t9,\t10,\t11,\t12,\t13,\t14,\t15,\t16,\t17,\t18,\t19,\t20,\t21,\t22,\t23,\t24,\t25,\t26,\t27,\t28,\t29,\t30,\t31];\n    $scope.displayAddNewBill = false;\n\n    $rootScope.ng_billAmount =0;\n    $rootScope.ng_billCate =1;\n    $rootScope.ng_billDue =1;\n\n    $rootScope.showBill     = false;\n    $rootScope.billOverview = true;\n\n    $scope.listBillStatus = $rootScope.rs_userBills;\n\n    $scope.bill_labels   = 0;\n    $scope.bill_data     = 0;\n\n\n\n    //Recal bill to be us in dough\n    $scope.billReCal = function(){\n\n        $scope.bill_labels   = null;\n        $scope.bill_data     = null;\n        factory_userBills.getBlls().success(function(data) {\n\n        var jsondata = data;\n        var bill_name=[];\n        var bill_amount=[];\n\n        for (var i = 0, l = jsondata.length; i < l; i++) {\n            bill_name[i]   = jsondata[i].name;\n            bill_amount[i] = jsondata[i].amount;\n        }\n\n        var billData = {\n            labels : bill_name,\n            value :   bill_amount\n\n        }\n\n        $scope.bill_labels   = bill_name;\n        $scope.bill_data     = bill_amount;\n\n        console.log($scope.bill_labels);\n        console.log($scope.bill_data);\n        });\n    }\n\n\n    $scope.billStatus = function($billlstatus)\n    {\n        if($billlstatus=='') {\n            $scope.listBillStatus = $rootScope.rs_userBills;\n        }\n        else {\n            $.ajax({\n                method: \"POST\",\n                url: \"/bill/billStatus\",\n                async: false,\n                cache: false,\n                data: {\n\n                    bill_status: $billlstatus\n                }\n            })\n            .done(function (msg) {\n                $scope.listBillStatus = JSON.parse(msg);\n            });\n        }\n    }\n\n\n    //Check if the value user enter is not negative\n    $scope.checkVal = function()\n    {\n        if($scope.ng_billAmount > 0)\n        {\n            var amt = $rootScope.rs_mthlyIncome - $rootScope.rs_mthlySaving - $scope.ng_billAmount;\n            if(amt > 0)\n            {\n                $scope.displayAddNewBill = true;\n            }\n            else\n            {\n                $scope.displayAddNewBill = false;\n            }\n        }\n        else\n        {\n            $scope.displayAddNewBill = false;\n        }\n    }\n\n    //Add the bill\n    $scope.addBill = function() {\n\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/addBills\",\n            data:  {\n\n                amount:     $scope.ng_billAmount,\n                cateId:     $scope.ng_billCate,\n                due_date:   $scope.ng_billDue\n            }\n        })\n        .done(function( msg ) {\n            factory_userBills.sumBills().success(function(data) {\n                $rootScope.rs_sumBills     =   data;\n                $rootScope.calPie();\n            });\n\n            factory_userBills.getBlls().success(function(data){\n                $rootScope.rs_userBills = data;\n                //$rootScope.billOverview = true;\n                $rootScope.showBill = false;\n            });\n\n                $scope.billReCal();\n        });\n        $('#userBillUpdate').effect(\"highlight\", {color:'#F6C13C'}, 3500);\n    };\n\n    //undoRemove bill\n    $scope.undoRemove = function(data){\n\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/undoRemoveBills\",\n            data:  {\n                billId:     data\n            }\n        })\n        .done(function( msg ) {\n\n            factory_userBills.sumBills().success(function(data) {\n                $rootScope.rs_sumBills = data;\n            });\n\n            factory_userBills.getBlls().success(function(data){\n                $rootScope.rs_userBills = data;\n            });\n            $('#userBillUpdate').effect(\"highlight\", {color:'#F6C13C'}, 2000);\n\n        });\n    }\n\n    //Remove bill\n    $scope.removeBill = function(data){\n\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/removeBills\",\n            data:  {\n                billId:     data\n            }\n        })\n        .done(function( msg ) {\n\n            factory_userBills.sumBills().success(function(data) {\n                $rootScope.rs_sumBills = data;\n            });\n\n            factory_userBills.getBlls().success(function(data){\n                $rootScope.rs_userBills = data;\n            });\n            $('#userBillUpdate').effect(\"highlight\", {color:'#F6C13C'}, 3500);\n            $scope.billReCal();\n        });\n    }\n\n    $scope.billReCal();\n})\n\n\n.directive('billView',function(){\n    return {\n        restrict: 'E',\n        templateUrl: '/bill/viewBills'\n    };\n})\n\n.directive('userBill', function() {\n    return {\n        restrict: 'E',\n        templateUrl: '/bill/userBill'\n    };\n})\n\n.directive('billList', function() {\n    return {\n        restrict: 'E',\n        templateUrl: '/bill/tpl_billList'\n    };\n})\n.directive('billCompactList',function(){\n    return {\n        restrict: 'E',\n        templateUrl: '/bill/billCompactList'\n    };\n})\n.directive('cardSelect',function(){\n    return {\n        restrict: 'E',\n        templateUrl: '/app/bills/tpl_cardSelect.html'\n    };\n});\n\n\n","app.controller('CardController', function($scope,$http,$mdDialog,factory_userCards) {\n\n    $scope.days     = [1,\t2,\t3,\t4,\t5,\t6,\t7,\t8,\t9,\t10,\t11,\t12,\t13,\t14,\t15,\t16,\t17,\t18,\t19,\t20,\t21,\t22,\t23,\t24,\t25,\t26,\t27,\t28,\t29,\t30,\t31];\n\n    $scope.cardItem = [];\n\n    //Remove card\n    $scope.removeCard = function(container_id){\n\n        $.ajax({\n            method: \"POST\",\n            url: \"/card/removeCard\",\n            data:  {\n                cardId: container_id\n            }\n        })\n\n        .done(function( msg ) {\n            factory_userCards.getCards().success(function(data){\n                $rootScope.userCards = data;\n            });\n        });\n    };\n\n    //Undo Remove card\n    $scope.undoRemoveCard = function(container_id){\n\n        $.ajax({\n            method: \"POST\",\n            url: \"/card/undoRemoveCard\",\n            data:  {\n                cardId: container_id\n            }\n        })\n\n        .done(function( msg ) {\n\n        });\n    };\n\n    $scope.addCard = function() {\n\n        $.ajax({\n            method: \"POST\",\n            url: \"/card/addCard\",\n            async:false,\n            data:  {\n\n                type:       $scope.ng_ccTypes,\n                issuer:     $scope.ng_ccIssuer,\n                cclimit:    $scope.ng_cardLimit,\n                ccnote:     $scope.ng_cardNote,\n                billDue:    $('#billDue').val(),\n                expMth:     $scope.expMonth,\n                expYear:    $scope.expYear,\n                lastFour:   $scope.lastFour\n            }\n        })\n\n        .done(function( msg ) {\n            $scope.cardListShow = true;\n            factory_userCards.getCards().success(function(data){\n                //$rootScope.userCards = data;\n            });\n        });\n\n        /*$http.get(\"/card/getCards\")\n            .success(function(response) {\n                $scope.userCards = response;\n        });*/\n    };\n\n    $scope.showAdvanced = function(ev,card) {\n\n        $scope.card_edit = card;\n        $mdDialog.show({\n            controller: DialogController,\n            templateUrl: '/app/creditcards/edit_card.tmpl.html',\n            parent: angular.element(document.body),\n            targetEvent: ev,\n            clickOutsideToClose: true,\n            scope: $scope\n        })\n        .then(function (answer) {\n            $scope.status = 'You said the information was \"' + answer + '\".';\n        }, function () {\n            $scope.status = 'You cancelled the dialog.';\n        })\n    };\n\n\n    function DialogController($scope, $mdDialog) {\n        //$scope.card_edit = card;\n\n        $scope.hide = function () {\n            $mdDialog.hide();\n        };\n        $scope.cancel = function () {\n            $mdDialog.cancel();\n        };\n        $scope.answer = function (answer) {\n            $mdDialog.hide(answer);\n            console.log(answer);\n        };\n    }\n})\n.directive('cardList', function() {\n    return {\n        restrict: 'E',\n        templateUrl: '/card/tpl_cardList'\n    };\n});\n","app.controller('goalTargetController', function($scope, $http) {\n\n\n    $scope.targetCal = {\n        targetPrice: 0,\n        targetNumPmt: 0,\n        targetInterest: 0,\n        targetWhere: ' '\n    };\n\n    $scope.lat = undefined;\n    $scope.lng = undefined;\n\n    /*\n     * Autocomplete location\n     * */\n    $scope.$on('gmPlacesAutocomplete::placeChanged', function () {\n        var location = $scope.targetWhereBuying.getPlace().geometry.location;\n        $scope.lat = location.lat();\n        $scope.lng = location.lng();\n        $scope.$apply();\n    });\n\n\n    $scope.goalCal = function(){\n\n        $scope.mthDiff = Math.round(Math.abs(moment().diff(moment([$scope.buying_years, $scope.buying_months, 1]), 'months', true)));\n        $scope.mthPmt = $scope.targetPrice/$scope.mthDiff;\n        $scope.travelLocation = $('#travelLocation').val();\n        $scope.goalSubmit = true;\n\n    }\n\n\n    //Submit goal\n    $scope.setGoalTarget = function () {\n\n        $scope.success = true;\n        $scope.showEdit = false;\n\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/setGoalTarget\",\n            data: {\n                    targetName:     $scope.targetName,\n                    targetPrice:    $scope.targetPrice,\n                    targetNumPmt:   $scope.mthPmt,\n                    savingMth:      $scope.savingMonth,\n                    where:          $scope.targetWhere,\n                    lat:            $scope.lat,\n                    lng:            $scope.lng,\n                    periods:        $scope.mthDiff,\n                    monthSelect:    $scope.buying_months,\n                    yearSelect:     $scope.buying_years\n                }\n        })\n        .done(function (msg) {\n        });\n    }\n});\n\n\n/*\n * Directives for this control\n */\n\napp.directive('buyingYearDrop',function() {\n    var currentYear = new Date().getFullYear();\n    return {\n        link: function (scope, element, attrs) {\n            scope.years = [];\n            for (var i = +attrs.offset; i < +attrs.range + 1; i++) {\n                scope.years.push(currentYear + i);\n            }\n            scope.yearSelect = currentYear;\n        },\n        templateUrl: '/app/goal/buying/tpl_year.html'\n    }\n});\n\n\n\napp.directive('buyingMonthSelect', function () {\n    return {\n        restrict: 'E',\n        templateUrl: '/app/goal/buying/tpl_month.html'\n    };\n});\n\n\n\n","app.controller('goalAutoController', function($scope,$rootScope, $http) {\n\n    $scope.autoInit = {\n        autoPrice: 0,\n        autoDPmt: 0,\n        autoNumPmt: 0,\n        autoInterest: 0,\n        autoPmt: 0\n    };\n\n    $scope.carCal = function(){\n        $scope.spendableDay = $rootScope.rs_userData.d_spendable - (($scope.autoPrice/$scope.car_month)/30);\n    };\n\n    $scope.addCarGoal = function()\n    {\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/setCarGoal\",\n            data: {\n                brand:          $scope.autoBrand,\n                price:          $scope.autoPrice,\n                duration:       $scope.car_month,\n                model:          $scope.autoModel,\n                savingMth:      $scope.autoPrice/$scope.car_month\n            }\n        })\n            .done(function (msg) {\n            });\n    }\n});","/*\n\n*/\napp.controller('goalHomeController', function($scope, $http) {\n    $scope.homeCal = {\n        //homePrice: 0,\n        //homeDPmt: 0,\n        //homeLoan: homePrice - homeDPmt,\n        //homeInterest: 0,\n        //homePmtDuration:0,\n        //homeMthPmt: 0\n    };\n});\n\n\n\n\napp.controller('goalController', function($scope,$rootScope,$http,factory_userGoals ) {\n\n    $scope.userGoals;\n\n    //Remove user goal\n    $scope.removeGoal = function(goal)\n    {\n        var adjustedSpendable = Number($rootScope.rs_userData.d_spendable) + Number(goal.mth_saving/30);\n\n        $rootScope.rs_userData.d_spendable = adjustedSpendable;\n\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/removeGoal\",\n            data:  {\n                remove: 1,\n                goal: goal,\n                adjusted: adjustedSpendable\n            }\n        });\n\n    }\n\n    $scope.undoGoalRemove = function(goal)\n    {\n        var adjustedSpendable = Number($rootScope.rs_userData.d_spendable) - Number(goal.mth_saving/30);\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/removeGoal\",\n            data:  {\n                remove: 0,\n                goal: goal,\n                adjusted: adjustedSpendable\n            }\n        });\n\n        $rootScope.rs_userData.d_spendable = adjustedSpendable;\n    }\n\n\n    //Get active goals\n    $scope.getActiveGoals = function()\n    {\n        factory_userGoals.userGoalsFactory().success(function(data){\n            $scope.userGoals=data;\n        });\n    };\n\n    //Get completed goal\n    $scope.getCompletedGoal = function()\n    {\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/showCompletedGoal\",\n            async: false,\n            data:  {\n                active_goal_flg: 0\n            }\n        })\n        .done(function( msg ) {\n            $scope.userGoals=JSON.parse(msg);\n        });\n    };\n\n    $scope.momentFormat = function(date){\n        return moment(date).format(\"MMM DD, YYYY \");\n    };\n\n    $scope.momentMonth = function(created_at,duration){\n        return moment(created_at).add(duration, 'months').format(\" MMM DD, YYYY\");\n    };\n\n    $scope.goal_templates =\n        [\n            { name: 'Goal Summary',     url: '/goal/goal_summary'},\n            { name: 'General Goal',     url: '/goal/goal_buying'},\n            //{ name: 'Debts'     ,       url: '/app/html/card_goals/goal_debts.html'},\n            { name: 'Travel'   ,        url: '/goal/goal_travel'},\n            { name: 'Buy Home/Condo',   url: '/goal/goal_buyhome'},\n            { name: 'Buy Car',          url: '/goal/goal_buycar'}\n        ];\n    $scope.goal_template = $scope.goal_templates[0];\n\n});\n\n","app.controller('goalTravelController', function($scope, $rootScope, $log) {\n\n    $scope.lat = undefined;\n    $scope.lng = undefined;\n    $scope.travelLocation = '';\n\n    $scope.$on('gmPlacesAutocomplete::placeChanged', function(){\n        var location = $scope.travelLocation.getPlace().geometry.location;\n        $scope.lat = location.lat();\n        $scope.lng = location.lng();\n        $scope.$apply();\n    });\n\n    $scope.savingMonth = 0;\n\n\n    $scope.travelSavingCal = function() {\n\n        $scope.mthDiff = Math.round(Math.abs(moment().diff(moment([$scope.travel_years, $scope.travel_months, 1]), 'months', true)));\n        $scope.mthPmt = $scope.travelAmount/$scope.mthDiff;\n        $scope.travelLocation = $('#travelLocation').val();\n\n    }\n\n\n    $( \"#travelAmount\" ).keyup(function() {\n        $scope.travelSavingCal();\n    });\n\n    $( \"#monthSelect\" ).change(function() {\n        $scope.travelSavingCal();\n    });\n\n    $( \"#yearSelect\" ).change(function() {\n        console.log(\"test\");\n        $scope.travelSavingCal();\n    });\n\n    $scope.getGoalDropDown = function() {\n        console.log($scope.goal_template);\n    };\n\n    $scope.setGoalTravel = function() {\n\n        $scope.travelGoalForm = false;\n        $scope.addTravelGoal = true;\n\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/setGoalTravel\",\n\n            data:  {    travelLocation: $('#travelLocation').val() ,\n                        travelAmount:   $('#travelAmount').val(),\n                        travelPax:      $('#travelPax').val(),\n                        travelNights:   $('#travelNights').val(),\n                        travelSavingMth:$scope.savingMonth,\n                        lat:            $scope.lat,\n                        lng:            $scope.lng,\n                        periods:        $scope.mthDiff,\n                        monthSelect:    $scope.travel_months,\n                        yearSelect:     $scope.travel_years\n            }\n        })\n        var adjustedSpendable = Number($rootScope.rs_userData.d_spendable) - Number($scope.savingMonth/30);\n        $rootScope.rs_userData.d_spendable = adjustedSpendable;\n    };\n});\n\n\n\n","//Spendable\nvar spendableDate  =[];\nvar spendableAmount=[];\nvar spendableRemain=[];\n\n\nvar weeklySpendable=[];\nvar weeklyDate=[];\nvar weeklyAmount=[];\nvar weeklyRemain=[];\n\napp.controller('spendableChartController', function($scope, $http,$window) {\n\n\n    $scope.showSpendableWeek = function(){\n        $http.get(\"/spendableTracker/get\")\n            .success(function (response) {\n                $window.weeklySpendable = response;\n\n                //Getting the date\n                for (i = 0; i < weeklySpendable.length; i++) {\n                    weeklyDate[i] = weeklySpendable[i].date;\n                }\n\n                for (i = 0; i < weeklySpendable.length; i++) {\n                    weeklyAmount[i] = weeklySpendable[i].spendable;\n                }\n\n                for (i = 0; i < weeklySpendable.length; i++) {\n                    weeklyRemain[i] = weeklySpendable[i].remain;\n                }\n            });\n        $scope.labels = weeklyDate;\n        $scope.data = [\n            weeklyAmount,\n            weeklyRemain\n        ];\n    };\n\n    $scope.showSpendableMonth = function(){\n\n        $http.get(\"/spendableTracker/getMonth\")\n            .success(function (response) {\n\n                $window.spendableData = response;\n\n                //Getting the date\n                for (i = 0; i < spendableData.length; i++) {\n                    spendableDate[i] = spendableData[i].date;\n                }\n\n                for (i = 0; i < spendableData.length; i++) {\n                    spendableAmount[i] = spendableData[i].spendable;\n                }\n\n                for (i = 0; i < spendableData.length; i++) {\n                    spendableRemain[i] = spendableData[i].remain;\n                }\n            });\n            $scope.labels = spendableDate;\n            $scope.data = [\n                spendableAmount,\n                spendableRemain\n            ];\n    };\n\n\n    $scope.showTodaySpending = function(){\n        $http.get(\"/todaySpending\")\n            .success(function(response) {\n                $scope.d_spendable     = response[0][\"d_spendable\"];\n                $scope.todaySpending   = response[0][\"todaySpending\"];\n                $scope.todaySpendable  = $scope.d_spendable - $scope.todaySpending;\n\n                if($scope.todaySpendable<0){ $scope.todaySpendable =0}\n\n                //Chart\n                var json = {\n                    \"data\": [  $scope.todaySpending, $scope.todaySpendable],\n                    \"labels\":   [\"Spent\", \"Spendable\"],\n                    \"colours\":  [\"#8D8D8D\",\"#87D2DA\"],\n                    \"option\": {\n                        responsive: true,\n                        maintainAspectRatio: true,\n\n                        //Boolean - Whether we should show a stroke on each segment\n                        segmentShowStroke : true,\n\n                        //String - The colour of each segment stroke\n                        segmentStrokeColor : \"#fff\",\n\n                        //Number - The width of each segment stroke\n                        segmentStrokeWidth : 2,\n\n                        //Number - The percentage of the chart that we cut out of the middle\n                        percentageInnerCutout : 80, // This is 0 for Pie charts\n\n                        //Number - Amount of animation steps\n                        animationSteps : 100,\n\n                        //Boolean - Whether we animate the rotation of the Doughnut\n                        animateRotate : true\n                    }\n\n\n\n                };\n                $scope.spendableDough = json;\n            });\n    };\n\n    //By default show the last 7 transaction\n    $scope.showSpendableWeek();\n    $scope.showTodaySpending();\n})\n.directive('spendableChart', function() {\n    return {\n        restrict: 'E',\n        templateUrl: '/spendableChart'\n    };\n})\n\n.directive('dailySpendableChart', function() {\n    return {\n        restrict: 'E',\n        templateUrl: '/dailySpendableDough'\n    };\n});\n","//Spendable\nvar spendableDate  =[];\nvar spendableAmount=[];\nvar spendableRemain=[];\n\n\nvar weeklySpendable=[];\nvar weeklyDate=[];\nvar weeklyAmount=[];\nvar weeklyRemain=[];\n\napp.controller('spendingCategoriesChartController', function($scope, $http,$window) {\n\n\n    $scope.showSpendableWeek = function(){\n        $http.get(\"/spendableTracker/get\")\n            .success(function (response) {\n                $window.weeklySpendable = response;\n\n                //Getting the date\n                for (i = 0; i < weeklySpendable.length; i++) {\n                    weeklyDate[i] = weeklySpendable[i].date;\n                }\n\n                for (i = 0; i < weeklySpendable.length; i++) {\n                    weeklyAmount[i] = weeklySpendable[i].spendable;\n                }\n\n                for (i = 0; i < weeklySpendable.length; i++) {\n                    weeklyRemain[i] = weeklySpendable[i].remain;\n                }\n            });\n        $scope.labels = weeklyDate;\n        $scope.data = [\n            weeklyAmount,\n            weeklyRemain\n        ];\n    };\n\n    $scope.showSpendableMonth = function(){\n\n        $http.get(\"/spendableTracker/getMonth\")\n            .success(function (response) {\n\n                $window.spendableData = response;\n\n                //Getting the date\n                for (i = 0; i < spendableData.length; i++) {\n                    spendableDate[i] = spendableData[i].date;\n                }\n\n                for (i = 0; i < spendableData.length; i++) {\n                    spendableAmount[i] = spendableData[i].spendable;\n                }\n\n                for (i = 0; i < spendableData.length; i++) {\n                    spendableRemain[i] = spendableData[i].remain;\n                }\n            });\n            $scope.labels = spendableDate;\n            $scope.data = [\n                spendableAmount,\n                spendableRemain\n            ];\n    };\n\n\n    //By default show the last 7 transaction\n    $scope.showSpendableWeek();\n\n    var randomScalingFactor = function(){\n        return Math.round(Math.random()*100);\n    };\n    //var barChartData = {\n    //    labels : [\"Food\",\"Shopping\",\"Groceries\",\"Health\",\"Utilities\",\"Entertainment\",\"Travel\"],\n    //    datasets : [\n    //        {\n    //            fillColor : \"rgba(220,220,220,0.5)\",\n    //            strokeColor : \"rgba(220,220,220,0.8)\",\n    //            highlightFill: \"rgba(220,220,220,0.75)\",\n    //            highlightStroke: \"rgba(220,220,220,1)\",\n    //            data : [randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor()]\n    //        },\n    //        {\n    //            fillColor : \"rgba(151,205,151,0.5)\",\n    //            strokeColor : \"rgba(151,205,151,0.8)\",\n    //            highlightFill : \"rgba(151,205,151,0.75)\",\n    //            highlightStroke : \"rgba(151,205,151,1)\",\n    //            data : [randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor()]\n    //        }\n    //    ]\n    //};\n    //\n    //\n    //var ctx = angular.element($('#barChart')).getContext('2d');\n    //    //document.getElementById(\"barChart\").getContext(\"2d\");\n    //var hBarChart = new Chart(ctx).HorizontalBar(barChartData, {\n    //        responsive: true,\n    //        barShowStroke: false\n    //    });\n    //\n\n    $scope.c_options = {\n        \"responsive\": true,\n        \"barShowStroke\": false,\n        \"scaleShowHorizontalLines\": false,\n        \"legendTemplate\" : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n    };\n\n\n\n    $scope.chart = {\n        title: \"Chart\",\n        type: \"HorizontalBar\",\n        height: 200,\n        //\"width\": 600,\n        options: {\n            chart: {\n                events: {}\n                //responsive: true,\n                //barShowStroke: false,\n                //scaleShowHorizontalLines: false\n            },\n            responsive: true,\n            barShowStroke: false,\n            scaleShowHorizontalLines: false,\n            legendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n        },\n        data: {\n            labels: [\"Food\",\"Shopping\",\"Groceries\",\"Health\",\"Utilities\",\"Entertainment\",\"Travel\"],\n            datasets: [\n                {\n                    fillColor : \"rgba(220,220,220,0.5)\",\n                    strokeColor : \"rgba(220,220,220,0)\",\n                    highlightFill: \"rgba(220,220,220,0.75)\",\n                    highlightStroke: \"rgba(220,220,220,0)\",\n                    data : [randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor()]\n                },\n                {\n                    fillColor : \"rgba(151,205,151,0.5)\",\n                    strokeColor : \"rgba(151,205,151,0)\",\n                    highlightFill : \"rgba(151,205,151,0.75)\",\n                    highlightStroke : \"rgba(151,205,151,0)\",\n                    data : [randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor()]\n                }\n            ]\n        }\n    }\n\n})\n.directive('spendingCategoriesChart', function() {\n    return {\n        restrict: 'E',\n        templateUrl: '/spendingCateChart'\n    };\n});\n","/**\n * Created by cholathit on 10/15/15.\n */\n\napp.controller('transactionController', function($scope, $http, $filter, $rootScope, factory_transaction) {\n    //$scope.pageClass = 'show-transaction';\n\n    $http.get(\"/ajax/billCate\")\n        .success(function(response) {\n            $scope.cateCore = response;\n        });\n\n    $http.get(\"/ajax/transRepeat\")\n        .success(function(response) {\n            $scope.transRepeat = response;\n        });\n\n    //$scope.pmtTypes=[];\n    factory_transaction.pmtTypes().success(function(data) {\n            $scope.pmtTypes = data;\n            console.log(data);\n\n        });\n\n    //$scope.transTypes={};\n    $http.get(\"/ajax/transTypes\")\n        .success(function(response) {\n            $scope.transTypes = response;\n        });\n\n    $http.get(\"/card/getCards\")\n        .success(function(response) {\n            $scope.creditCards = response;\n        });\n\n    $http.get(\"/bill/getBills\")\n        .success(function(response) {\n            $scope.bills = response;\n        });\n\n    /*$http.get(\"/ajax/userData\")\n        .success(function(response) {\n            $scope.userData = response;\n        });*/\n\n    $http.get(\"/ajax/currency\")\n        .success(function(response) {\n            $scope.currencies = response;\n        });\n\n    $scope.listData = [];\n\n    $scope.listDataPopulate = function (data){\n        angular.forEach(data, function(value){\n            //$scope.count++;\n            var obj = {\n                cate_id:          value.cate_id,\n                cate_obj:         $filter('filter')($scope.cateCore, {id: value.cate_id}, true),\n                trans_type:       value.trans_type,\n                trans_type_obj:   $filter('filter')($scope.transTypes, {id: value.trans_type}, true),\n                trans_repeat:     value.trans_repeat,\n                trans_repeat_obj:    $filter('filter')($scope.transRepeat, {id: value.trans_repeat}, true),\n                pmt_type:         value.pmt_type,\n                pmt_type_obj:     $filter('filter')($scope.pmtTypes, {id: value.pmt_type}, true),\n                amount:           value.amount,\n                //location:         value.location,\n                note:             value.note,\n                trans_date:       value.trans_date,\n                created_at:       value.created_at,\n                currency:         $filter('filter')($scope.currencies, {id: $scope.userData.currency}, true),\n                //location:         value.location,\n                //cityName:         value.cityName,\n                //countryCode:      value.countryCode,\n                //postalCode:       value.postalCode,\n                //lat:              value.lat,\n                //lng:              value.lng,\n                location_provider:value.location_provider,\n                location_id:      value.location\n            };\n            $scope.listData.push(obj);\n        });\n    };\n\n    $scope.defaultPmtType = 1;\n    $scope.defaultTransType = 1;\n\n    $scope.selectedPmtType = $scope.defaultPmtType;\n    $scope.selectedTransType = $scope.defaultTransType;\n\n    $scope.pmtSelected = function(id){\n        $scope.selectedPmtType = id;\n    };\n\n    $scope.transSelected = function(id){\n        $scope.selectedTransType = id;\n    };\n\n    $scope.trans_date = new Date();\n    $scope.selectedCC = 0;\n    $scope.selectedBill = 0;\n\n    $scope.doAdd = function() {\n        var obj = {\n            cate_id:        $scope.cate_id,    //$('#cate_id').val(),\n            trans_type:     $scope.selectedTransType, //$('#trans_type').val(),\n            //trans_repeat:   $scope.trans_repeat.id,    //$('#trans_repeat').val(),\n            pmt_type:       $scope.selectedPmtType, //$('#pmt_type').val(),\n            cc_id:          $scope.selectedCC,\n            bill_id:        $scope.selectedBill,\n            amount:         $scope.amount,\n            //location:       $scope.location,\n            note:           $scope.note,\n            trans_date:     $filter('date')($scope.trans_date, 'yyyy-MM-dd'),\n            //cityName:       $scope.cityName,\n            //postalCode:     $scope.postalCode,\n            //countryCode:    $scope.countryCode,\n            //lat:            $scope.lat,\n            //lng:            $scope.lng,\n            location_provider: $scope.location_provider,\n            location:       $scope.location_id\n\n    };\n        $.ajax({\n            method: \"POST\",\n            url: \"/add_transaction\",\n            data:  obj\n        })\n            .done(function( msg ) {\n                //alert('save!');\n                //$scope.listData.push(obj);\n                //window.location.href = '/profile';\n                $http.get(\"/getAllTransactions\")\n                    .success(function(response) {\n                        $scope.listDataPopulate(response);\n                    }\n                );\n\n            });\n    };\n\n    $http.get(\"/getAllTransactions\")\n        .success(function(response) {\n            $scope.listDataPopulate(response);\n        }\n    );\n\n    $scope.getCateIcon = function(cateId){\n        var iconSet = [\n            {id: 1,     name: \"Transport\",          fa: \"fa fa-bus\"},\n            {id: 2,     name: \"Food\",               fa: \"fa fa-cutlery\"},\n            {id: 3,     name: \"Shopping\",           fa: \"fa fa-tag\"},\n            {id: 4,     name: \"Groceries\",          fa: \"fa fa-shopping-cart\"},\n            {id: 5,     name: \"Entertainment\",      fa: \"fa fa-film\"},\n            {id: 6,     name: \"Travel\",             fa: \"fa fa-plane\"},\n            {id: 7,     name: \"Health\",             fa: \"fa fa-heartbeat\"},\n            {id: 8,     name: \"Beauty\",             fa: \"fa fa-diamond\"},\n            {id: 9,     name: \"Utility - Electric\", fa: \"fa fa-bolt\"},\n            {id: 10,    name: \"Utility - Internet\", fa: \"fa fa-wifi\"},\n            {id: 11,    name: \"Utility - Phone\",    fa: \"fa fa-phone\"},\n            {id: 12,    name: \"Utility - Water\",    fa: \"fa fa-tint\"}\n        ];\n        var selectedIcon = $filter('filter')(iconSet, {id: cateId}, true);\n        return selectedIcon[0].fa;\n    };\n\n\n    $scope.getPmtIcon = function(pmtId){\n        var iconSet = [\n            {id: 1,     name: \"Cash\",          fa: \"fa fa-money\"},\n            {id: 2,     name: \"Credit Card\",   fa: \"fa fa-credit-card\"}\n        ];\n        var selectedIcon = $filter('filter')(iconSet, {id: pmtId}, true);\n        return selectedIcon[0].fa;\n    };\n\n    $scope.getTransTypeIcon = function(transTypeId){\n        var iconSet = [\n            {id: 1,     name: \"Expense\",  fa: \"fa fa-minus-square\"},\n            {id: 2,     name: \"Income\",   fa: \"fa fa-plus-square\"},\n            {id: 3,     name: \"Bill\",     fa: \"fa fa-minus-square\"}\n        ];\n        var selectedIcon = $filter('filter')(iconSet, {id: transTypeId}, true);\n        return selectedIcon[0].fa;\n    };\n\n    $scope.propertyIcons = function(name){\n        var iconSet = [\n            {name: \"location\",  fa: \"fa fa-map-marker\"},\n            {name: \"note\",  fa: \"fa fa-comment\"},\n            {name: \"datetime\",  fa: \"fa fa-clock\"}\n        ];\n        var selectedIcon = $filter('filter')(iconSet, {name: name}, true);\n        return selectedIcon[0].fa;\n    };\n\n    $scope.cateColor = function(cateId){\n        var colors = [\n            {id: 1,     name: \"Transport\",          color: {name: \"Pastel Green\", code: \"#77DD77\"}},\n            {id: 2,     name: \"Food\",               color: {name: \"Medium Spring Bud\", code: \"#C9DC87\"}},\n            {id: 3,     name: \"Shopping\",           color: {name: \"Pastel Yellow\", code: \"#FDFD96\"}},\n            {id: 4,     name: \"Groceries\",          color: {name: \"Pastel Brown\", code: \"#836953\"}},\n            {id: 5,     name: \"Entertainment\",      color: {name: \"Dark Pastel Blue\", code: \"#779ECB\"}},\n            {id: 6,     name: \"Travel\",             color: {name: \"Yankees Blue\", code: \"#1C2841\"}},\n            {id: 7,     name: \"Health\",             color: {name: \"Medium Ruby\", code: \"#AA4069\"}},\n            {id: 8,     name: \"Beauty\",             color: {name: \"Light Pastel Purple\", code: \"#B19CD9\"}},\n            {id: 9,     name: \"Utility - Electric\", color: {name: \"Pastel Gray\", code: \"#CFCFC4\"}},\n            {id: 10,    name: \"Utility - Internet\", color: {name: \"Pastel Blue\", code: \"#AEC6CF\"}},\n            {id: 11,    name: \"Utility - Phone\",    color: {name: \"Medium Turquoise\", code: \"#48D1CC\"}},\n            {id: 12,    name: \"Utility - Water\",    color: {name: \"Rackley\", code: \"#5D8AA8\"}}\n        ];\n        var selectedIcon = $filter('filter')(colors, {id: cateId}, true);\n        return selectedIcon[0].color.code;\n    };\n\n    //$scope.getTransRange = function(range) {\n    //    switch(range) {\n    //        case \"all\":\n    //            return $scope.listData;\n    //            break;\n    //        case \"week\":\n    //            //return $filter('range')($scope.listData, {trans_date: }, true);\n    //            break;\n    //\n    //        default:\n    //            return $scope.listData;\n    //    }\n    //};\n\n    //$scope.lat = undefined;\n    //$scope.lng = undefined;\n\n    $scope.location_id = null;\n    $scope.location_provider = null;\n\n\n    $scope.$on('gmPlacesAutocomplete::placeChanged', function(){\n\n        $scope.location_id = $scope.location.getPlace().id;\n        $scope.location_provider = 'Google';\n        $scope.$apply();\n    });\n\n    //$scope.scrollHeight = 200; //default\n\n    $scope.scroll_config = {\n        autoHideScrollbar: false,\n        theme: 'rounded-dark',\n        advanced:{\n            updateOnContentResize: true\n        },\n        setHeight: 200,\n        setWidth: '100%',\n        //setLeft: '-20%',\n        scrollInertia: 0,\n        alwaysShowScrollbar: 0,\n        axis: 'y',\n        mouseWheel:{ enable: true },\n        keyboard:{ enable: true },\n        contentTouchScroll: 25,\n        scrollButtons:{ enable: false }\n\n    };\n\n    $scope.bill = undefined;\n\n})\n\n.directive('transList', function() {\n        return {\n            restrict: 'E',\n            templateUrl: '/transList'\n        };\n})\n\n.directive('addTrans', function() {\n        return {\n            restrict: 'E',\n            templateUrl: '/addTrans',\n            scope:{\n                bill: '=billValue'\n            }\n        };\n})\n\n.directive('transRecent', function() {\n        //var fn = function(scope, element, attributes) {\n        //    scope.scroll_config.setHeight = scope.scrollHeight;\n        //};\n\n        return {\n            restrict: 'E',\n            templateUrl: '/transRecent'\n            //link: fn,\n            //scope: {\n            //    scrollHeight: '=height'\n            //}\n        };\n})\n\n.directive('monthlySpendableChart', function() {\n    return {\n        restrict: 'E',\n        templateUrl: '/monthlySpendableChart'\n    };\n});","app.controller('userController', function($scope,factory_userSpending,$rootScope) {\n\n\n    if($scope.userData.mth_income != 0) {\n        $rootScope.rs_mthlyIncome = $scope.userData.mth_income;\n    }\n    else{\n        $rootScope.rs_mthlyIncome = $scope.rs_mthlyIncome;\n    }\n\n    $rootScope.rs_mthlySaving  =   $scope.userData.mth_saving;\n\n    $scope.ng_spendable =   $rootScope.rs_mthlyIncome - $rootScope.rs_sumBills - $rootScope.rs_mthlySaving - $rootScope.rs_userData.goal_saving;\n\n    $scope.currency     =   $scope.userData.currency;\n\n    $scope.ng_userfname    =    $scope.userData.firstname;\n    $scope.ng_userlname    =    $scope.userData.lastname;\n    $scope.ng_email        =    $scope.userData.email;\n\n\n    $scope.labels = [\"Bill\", \"Saving\", \"Spendable\",\"Goal Saving\"];\n    $scope.colours=  [\"#8D8D8D\",\"#87D2DA\",\"#1594A8\",\"#C7E8EA\"];\n    $scope.data = [ $rootScope.rs_sumBills, $rootScope.rs_mthlySaving,$scope.ng_spendable,$rootScope.rs_userData.goal_saving];\n\n\n    //Delay the highlight on keyup\n    var typewatch = function(){\n        var timer = 0;\n        return function(callback, ms){\n            clearTimeout (timer);\n            timer = setTimeout(callback, ms);\n        }\n    }();\n\n\n    $rootScope.calPie = function(){\n        $scope.ng_spendable =   $rootScope.rs_mthlyIncome - $rootScope.rs_sumBills - $rootScope.rs_mthlySaving - $rootScope.rs_userData.goal_saving;\n\n        $scope.labels = [\"Bill\", \"Saving\", \"Spendable\",\"Goal Saving\"];\n        $scope.data = [ $rootScope.rs_sumBills, $rootScope.rs_mthlySaving,$scope.ng_spendable,$rootScope.rs_userData.goal_saving];\n\n        $rootScope.rs_mthlyIncome = $scope.rs_mthlyIncome;\n\n        typewatch(function()\n        {\n        $('#editMonthlySpendable').effect(\"highlight\", {color:'#F6C13C'}, 1500);\n        $('#editDaySpendable').effect(\"highlight\", {color:'#F6C13C'}, 1500);\n        $('#editDaySaving').effect(\"highlight\", {color:'#F6C13C'}, 1500);\n        }, 1200 );\n    };\n\n    $scope.saveUserData = function(){\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/updateUserData\",\n            data:  {\n                firstname:      $scope.ng_userfname ,\n                lastname:       $scope.ng_userlname ,\n                email:          $scope.ng_email,\n                job:            $scope.userJobType\n            }\n        })\n        .done(function( msg ) {\n\n            $(\"#userdata_alert_message\").show();\n\n            window.setTimeout(function() {\n                $(\"#userdata_alert_message\" +\n                \"\").fadeTo(500, 0).slideUp(500, function(){\n                    $(this).remove();\n                });\n            }, 3000);\n        });\n    }\n\n    $scope.saveInfo = function (){\n        $scope.ng_spendable = $scope.rs_mthlyIncome - $scope.rs_sumBills - $scope.rs_mthlySaving;\n        $.ajax({\n            method: \"POST\",\n            url: \"/ajax/updateUserInfo\",\n            data:  {\n                editMonthlyIncome:      $scope.rs_mthlyIncome,\n                editMonthlyBill:        $scope.rs_sumBills,\n                editMonthlySaving:      $scope.rs_mthlySaving,\n                editMonthlySpendable:   $scope.ng_spendable,\n                editDaySaving:          $scope.rs_mthlySaving/30,\n                editDaySpendable:       $scope.ng_spendable/30,\n                currency:               $scope.ng_currency\n            }\n        })\n            .done(function( msg ) {\n                $(\"#alert_message\").show();\n\n                window.setTimeout(function() {\n                    $(\"#alert_message\").fadeTo(500, 0).slideUp(500, function(){\n                        $(this).remove();\n                    });\n                }, 3000);\n            });\n    }\n});\n\n"],"sourceRoot":"/source/"}